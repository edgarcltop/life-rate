from roadmapper.roadmap import Roadmap
from roadmapper.timelinemode import TimelineMode


def readme_roadmap():
    roadmap = Roadmap(1200, 400, colour_theme="BLUEMOUNTAIN")
    roadmap.set_title("My Demo Roadmap")
    roadmap.set_subtitle("Matariki Technologies Ltd")
    roadmap.set_timeline(TimelineMode.MONTHLY, "2023-01-01", 12)
    roadmap.add_logo(
        "images/logo/matariki-tech-logo.png", position="top-right", width=50, height=50
    )

    group = roadmap.add_group("Core Product Work Stream")

    task = group.add_task("Base Functionality", "2023-01-01", "2023-10-31")
    task.add_milestone("v.1.0", "2023-02-15")
    task.add_milestone("v.1.1", "2023-08-01")

    parellel_task = task.add_parallel_task("Enhancements", "2023-11-15", "2024-03-31")
    parellel_task.add_milestone("v.2.0", "2024-03-30")

    task = group.add_task("Showcase #1", "2023-03-01", "2023-05-07")
    task.add_parallel_task("Showcase #2", "2023-06-01", "2023-08-07")

    roadmap.set_footer("Generated by Roadmapper")
    roadmap.draw()
    roadmap.save("images/demo01.png")


### Wiki Images
def home_roadmap():
    my_roadmap = Roadmap(width=500, height=400)
    my_roadmap.set_title("My Roadmap")
    my_roadmap.set_timeline(
        mode=TimelineMode.MONTHLY, start="2022-11-14", number_of_items=6
    )

    group = my_roadmap.add_group("Development")
    group.add_task("Activity 1", "2022-12-01", "2023-02-10")
    group.add_task("Activity 2", "2023-01-11", "2023-03-20")
    group.add_task("Activity 3", "2023-01-21", "2023-06-30")

    my_roadmap.set_footer("Generated by Roadmapper")
    my_roadmap.draw()
    my_roadmap.save("images/my_roadmap.png")


def color_theme_roadmap(filename: str, colour_theme: str):
    roadmap = Roadmap(600, 500, colour_theme=colour_theme, show_marker=True)
    roadmap.set_title("My Demo Roadmap")
    roadmap.set_timeline(TimelineMode.QUARTERLY, "2023-01-01", 4)
    roadmap.set_footer("Generated by Roadmapper")

    group = roadmap.add_group("Workstream 1")
    task = group.add_task("Task 1-A", "2023-01-01", "2023-04-30")
    task.add_parallel_task("Task 2-B", "2023-05-15", "2023-08-30")
    group.add_task("Task 3-C", "2023-04-01", "2023-06-30")

    group = roadmap.add_group("Workstream 2")
    group.add_task("Task 2-A", "2023-04-01", "2023-06-30")
    group.add_task("Task 2-B", "2023-05-01", "2023-07-30")
    group.add_task("Task 2-C", "2023-06-01", "2023-08-30")

    roadmap.draw()
    roadmap.save(filename)


def en_NZ_roadmap(filename: str, colour_theme: str, locale_name: str):
    roadmap = Roadmap(800, 700, colour_theme=colour_theme, show_marker=True)
    roadmap.set_title("Strategy Roadmap 2023")
    roadmap.set_subtitle("Matariki Technologies Ltd")
    roadmap.set_timeline(
        TimelineMode.QUARTERLY, "2023-01-01", 4, timeline_locale_file=locale_name
    )
    roadmap.set_footer("Generated by Roadmapper")

    group = roadmap.add_group("People Stream")
    task = group.add_task("Develop Inclusion Strategy", "2023-01-01", "2023-04-30")
    task.add_parallel_task(
        "Promote diversity, equity, and inclusion", "2023-05-01", "2023-12-30"
    )
    group.add_task("Implement a sustainability programme", "2023-03-01", "2023-11-30")

    group = roadmap.add_group("Process Stream")
    group.add_task(
        "Implement Business Improvement Programme", "2023-02-01", "2023-11-30"
    )
    task = group.add_task("Automate processes", "2023-07-01", "2023-12-30")
    task.add_milestone("30% Automated ", "2023-8-01")
    task.add_milestone("60% Automated ", "2023-12-01")

    group = roadmap.add_group("Tool Stream")
    group.add_task("Implement strategy", "2023-01-01", "2023-04-30")
    group.add_task("Tools Selection", "2023-02-01", "2023-08-30")
    task = group.add_task("Centralized Tool Administration", "2023-04-01", "2023-11-30")
    task.add_milestone("Admin Centralised", "2023-12-01")

    roadmap.draw()
    roadmap.save(filename)


def zh_TW_roadmap(filename: str, colour_theme: str, locale_name: str):
    roadmap = Roadmap(800, 700, colour_theme=colour_theme, show_marker=True)
    roadmap.set_title("戰略路線圖 2023")
    roadmap.set_subtitle("瑪塔里奇太陽科技有限公司")
    roadmap.set_timeline(
        TimelineMode.QUARTERLY, "2023-01-01", 4, timeline_locale_file=locale_name
    )
    roadmap.set_footer("由 Roadmapper 生成")

    group = roadmap.add_group("人員流程")
    task = group.add_task("制定包容戰略", "2023-01-01", "2023-04-30")
    task.add_parallel_task("促進多樣性、公平性和包容性", "2023-05-01", "2023-12-30")
    group.add_task("實施可持續發展計劃", "2023-03-01", "2023-11-30")

    group = roadmap.add_group("工作流程")
    group.add_task("實施業務改進計劃", "2023-02-01", "2023-11-30")
    task = group.add_task("自動化流程", "2023-07-01", "2023-12-30")
    task.add_milestone("30%自動化 ", "2023-8-01")
    task.add_milestone("60%自動化 ", "2023-12-01")

    group = roadmap.add_group("工具流程")
    group.add_task("實施工具選擇策略", "2023-01-01", "2023-04-30")
    group.add_task("工具選擇", "2023-02-01", "2023-08-30")
    task = group.add_task("集中工具管理", "2023-04-01", "2023-11-30")
    task.add_milestone("系統集中完成", "2023-12-01")

    roadmap.draw()
    roadmap.save(filename)


def ja_JP_roadmap(filename: str, colour_theme: str, locale_name: str):
    roadmap = Roadmap(800, 700, colour_theme=colour_theme, show_marker=True)
    roadmap.set_title("戦略的ロードマップ 2023")
    roadmap.set_subtitle("マタリッチサンテクノロジー株式会社")
    roadmap.set_timeline(
        TimelineMode.QUARTERLY, "2023-01-01", 4, timeline_locale_file=locale_name
    )
    roadmap.set_footer("ロードマッパーによって生成")

    group = roadmap.add_group("人事プロセス")
    task = group.add_task("インクルージョン戦略を策定する", "2023-01-01", "2023-04-30")
    task.add_parallel_task("多様性、公平性、包括性の促進", "2023-05-01", "2023-12-30")
    group.add_task("持続可能な開発計画の実施", "2023-03-01", "2023-11-30")

    group = roadmap.add_group("作業過程")
    group.add_task("業務改善計画の実施", "2023-02-01", "2023-11-30")
    task = group.add_task("自動化されたプロセス", "2023-07-01", "2023-12-30")
    task.add_milestone("30%自動化", "2023-8-01")
    task.add_milestone("60%自動化", "2023-12-01")

    group = roadmap.add_group("ツールフロー")
    group.add_task("ツール選択戦略を実装する", "2023-01-01", "2023-04-30")
    group.add_task("ツールの選択", "2023-02-01", "2023-08-30")
    task = group.add_task("集中ツール管理", "2023-04-01", "2023-11-30")
    task.add_milestone("システムは集中型", "2023-12-01")

    roadmap.draw()
    roadmap.save(filename)


def ko_KR_roadmap(filename: str, colour_theme: str, locale_name: str):
    roadmap = Roadmap(800, 700, colour_theme=colour_theme, show_marker=True)
    roadmap.set_title("전략 로드맵 2023")
    roadmap.set_subtitle("마타리키 테크놀로지스")
    roadmap.set_timeline(
        TimelineMode.QUARTERLY, "2023-01-01", 4, timeline_locale_file=locale_name
    )
    roadmap.set_footer("로드매퍼에서 생성")

    group = roadmap.add_group("인사 프로세스")
    task = group.add_task("포함 전략을 수립", "2023-01-01", "2023-04-30")
    task.add_parallel_task("다양성, 공정성, 포괄성 촉진", "2023-05-01", "2023-12-30")
    group.add_task("지속 가능한 개발 계획 실시", "2023-03-01", "2023-11-30")

    group = roadmap.add_group("작업 과정")
    group.add_task("업무 개선 계획 실시", "2023-02-01", "2023-11-30")
    task = group.add_task("자동화된 프로세스", "2023-07-01", "2023-12-30")
    task.add_milestone("30% 자동화", "2023-8-01")
    task.add_milestone("60% 자동화", "2023-12-01")

    group = roadmap.add_group("공구 흐름")
    group.add_task("도구 선택 전략 구현", "2023-01-01", "2023-04-30")
    group.add_task("도구 선택", "2023-02-01", "2023-08-30")
    task = group.add_task("중앙 집중식 도구 관리", "2023-04-01", "2023-11-30")
    task.add_milestone("시스템은 중앙 집중식", "2023-12-01")

    roadmap.draw()
    roadmap.save(filename)


def banner_roadmap():
    color_theme_roadmap("images/color-theme01.png", "DEFAULT")
    color_theme_roadmap("images/color-theme02.png", "GREYWOOF")
    color_theme_roadmap("images/color-theme03.png", "ORANGEPEEL")
    color_theme_roadmap("images/color-theme04.png", "BLUEMOUNTAIN")
    color_theme_roadmap("images/color-theme05.png", "GREENTURTLE")


def multilingual_roadmap():
    en_NZ_roadmap("images/en_NZ-roadmap.png", "rainbow.json", "en_US")
    zh_TW_roadmap(
        "images/zh_TW-roadmap.png",
        "rainbow-unicode.json",
        "zh_TW_timeline_settings.json",
    )
    ja_JP_roadmap(
        "images/ja_JP-roadmap.png",
        "rainbow-unicode.json",
        "ja_JP_timeline_settings.json",
    )
    ko_KR_roadmap(
        "images/ko-KR-roadmap.png",
        "rainbow-unicode.json",
        "ko_KR_timeline_settings.json",
    )


if __name__ == "__main__":
    readme_roadmap()
    home_roadmap()
    banner_roadmap()
    multilingual_roadmap()
